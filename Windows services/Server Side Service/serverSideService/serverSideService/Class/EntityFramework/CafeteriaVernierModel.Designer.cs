//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Cafeteria_Vernier_dbModel", "FK_Cv_Customer_Account_Cv_Customer_Information", "CustomerInformation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Procesta.serverSideService.Class.EntityFramework.CustomerInformation), "CustomerAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Procesta.serverSideService.Class.EntityFramework.CustomerAccount), true)]
[assembly: EdmRelationshipAttribute("Cafeteria_Vernier_dbModel", "FK_Cv_Team_Invitaction_Cv_Customer_Information", "CustomerInformation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Procesta.serverSideService.Class.EntityFramework.CustomerInformation), "TeamInvitaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Procesta.serverSideService.Class.EntityFramework.TeamInvitaction), true)]
[assembly: EdmRelationshipAttribute("Cafeteria_Vernier_dbModel", "FK_Cv_Team_Member_Cv_Customer_Information", "CustomerInformation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Procesta.serverSideService.Class.EntityFramework.CustomerInformation), "TeamMember", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Procesta.serverSideService.Class.EntityFramework.TeamMember), true)]
[assembly: EdmRelationshipAttribute("Cafeteria_Vernier_dbModel", "FK_Cv_User_Account_Recharge_History_Cv_Customer_Information", "CustomerInformation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Procesta.serverSideService.Class.EntityFramework.CustomerInformation), "UserRechargeHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Procesta.serverSideService.Class.EntityFramework.UserRechargeHistory), true)]
[assembly: EdmRelationshipAttribute("Cafeteria_Vernier_dbModel", "FK_Cv_Employ_Permission_Cv_Employ", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Procesta.serverSideService.Class.EntityFramework.Employee), "EmployeePermission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Procesta.serverSideService.Class.EntityFramework.EmployeePermission), true)]
[assembly: EdmRelationshipAttribute("Cafeteria_Vernier_dbModel", "FK_CV_Team_Account_Cv_Team", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Procesta.serverSideService.Class.EntityFramework.Team), "TeamAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Procesta.serverSideService.Class.EntityFramework.TeamAccount), true)]
[assembly: EdmRelationshipAttribute("Cafeteria_Vernier_dbModel", "FK_Cv_Team_Account_Recharge_History_Cv_Team", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Procesta.serverSideService.Class.EntityFramework.Team), "TeamRechargeHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Procesta.serverSideService.Class.EntityFramework.TeamRechargeHistory), true)]
[assembly: EdmRelationshipAttribute("Cafeteria_Vernier_dbModel", "FK_Cv_Team_Invitaction_Cv_Team", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Procesta.serverSideService.Class.EntityFramework.Team), "TeamInvitaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Procesta.serverSideService.Class.EntityFramework.TeamInvitaction), true)]
[assembly: EdmRelationshipAttribute("Cafeteria_Vernier_dbModel", "FK_Cv_Team_Member_Cv_Team", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Procesta.serverSideService.Class.EntityFramework.Team), "TeamMember", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Procesta.serverSideService.Class.EntityFramework.TeamMember), true)]

#endregion

namespace Procesta.serverSideService.Class.EntityFramework
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Cafeteria_Vernier_dbEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Cafeteria_Vernier_dbEntities object using the connection string found in the 'Cafeteria_Vernier_dbEntities' section of the application configuration file.
        /// </summary>
        public Cafeteria_Vernier_dbEntities() : base("name=Cafeteria_Vernier_dbEntities", "Cafeteria_Vernier_dbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Cafeteria_Vernier_dbEntities object.
        /// </summary>
        public Cafeteria_Vernier_dbEntities(string connectionString) : base(connectionString, "Cafeteria_Vernier_dbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Cafeteria_Vernier_dbEntities object.
        /// </summary>
        public Cafeteria_Vernier_dbEntities(EntityConnection connection) : base(connection, "Cafeteria_Vernier_dbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerAccount> CustomerAccounts
        {
            get
            {
                if ((_CustomerAccounts == null))
                {
                    _CustomerAccounts = base.CreateObjectSet<CustomerAccount>("CustomerAccounts");
                }
                return _CustomerAccounts;
            }
        }
        private ObjectSet<CustomerAccount> _CustomerAccounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerInformation> CustomerInformations
        {
            get
            {
                if ((_CustomerInformations == null))
                {
                    _CustomerInformations = base.CreateObjectSet<CustomerInformation>("CustomerInformations");
                }
                return _CustomerInformations;
            }
        }
        private ObjectSet<CustomerInformation> _CustomerInformations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeePermission> EmployeePermissions
        {
            get
            {
                if ((_EmployeePermissions == null))
                {
                    _EmployeePermissions = base.CreateObjectSet<EmployeePermission>("EmployeePermissions");
                }
                return _EmployeePermissions;
            }
        }
        private ObjectSet<EmployeePermission> _EmployeePermissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Team> Teams
        {
            get
            {
                if ((_Teams == null))
                {
                    _Teams = base.CreateObjectSet<Team>("Teams");
                }
                return _Teams;
            }
        }
        private ObjectSet<Team> _Teams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeamAccount> TeamAccounts
        {
            get
            {
                if ((_TeamAccounts == null))
                {
                    _TeamAccounts = base.CreateObjectSet<TeamAccount>("TeamAccounts");
                }
                return _TeamAccounts;
            }
        }
        private ObjectSet<TeamAccount> _TeamAccounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeamInvitaction> TeamInvitactions
        {
            get
            {
                if ((_TeamInvitactions == null))
                {
                    _TeamInvitactions = base.CreateObjectSet<TeamInvitaction>("TeamInvitactions");
                }
                return _TeamInvitactions;
            }
        }
        private ObjectSet<TeamInvitaction> _TeamInvitactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeamMember> TeamMembers
        {
            get
            {
                if ((_TeamMembers == null))
                {
                    _TeamMembers = base.CreateObjectSet<TeamMember>("TeamMembers");
                }
                return _TeamMembers;
            }
        }
        private ObjectSet<TeamMember> _TeamMembers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeamRechargeHistory> TeamRechargeHistories
        {
            get
            {
                if ((_TeamRechargeHistories == null))
                {
                    _TeamRechargeHistories = base.CreateObjectSet<TeamRechargeHistory>("TeamRechargeHistories");
                }
                return _TeamRechargeHistories;
            }
        }
        private ObjectSet<TeamRechargeHistory> _TeamRechargeHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserLoginHistory> UserLoginHistories
        {
            get
            {
                if ((_UserLoginHistories == null))
                {
                    _UserLoginHistories = base.CreateObjectSet<UserLoginHistory>("UserLoginHistories");
                }
                return _UserLoginHistories;
            }
        }
        private ObjectSet<UserLoginHistory> _UserLoginHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserRechargeHistory> UserRechargeHistories
        {
            get
            {
                if ((_UserRechargeHistories == null))
                {
                    _UserRechargeHistories = base.CreateObjectSet<UserRechargeHistory>("UserRechargeHistories");
                }
                return _UserRechargeHistories;
            }
        }
        private ObjectSet<UserRechargeHistory> _UserRechargeHistories;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerAccounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomerAccounts(CustomerAccount customerAccount)
        {
            base.AddObject("CustomerAccounts", customerAccount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerInformations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomerInformations(CustomerInformation customerInformation)
        {
            base.AddObject("CustomerInformations", customerInformation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeePermissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeePermissions(EmployeePermission employeePermission)
        {
            base.AddObject("EmployeePermissions", employeePermission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Teams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeams(Team team)
        {
            base.AddObject("Teams", team);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeamAccounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeamAccounts(TeamAccount teamAccount)
        {
            base.AddObject("TeamAccounts", teamAccount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeamInvitactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeamInvitactions(TeamInvitaction teamInvitaction)
        {
            base.AddObject("TeamInvitactions", teamInvitaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeamMembers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeamMembers(TeamMember teamMember)
        {
            base.AddObject("TeamMembers", teamMember);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeamRechargeHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeamRechargeHistories(TeamRechargeHistory teamRechargeHistory)
        {
            base.AddObject("TeamRechargeHistories", teamRechargeHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserLoginHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserLoginHistories(UserLoginHistory userLoginHistory)
        {
            base.AddObject("UserLoginHistories", userLoginHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserRechargeHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserRechargeHistories(UserRechargeHistory userRechargeHistory)
        {
            base.AddObject("UserRechargeHistories", userRechargeHistory);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cafeteria_Vernier_dbModel", Name="CustomerAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerAccount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomerAccount object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="minutes">Initial value of the Minutes property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static CustomerAccount CreateCustomerAccount(global::System.String userID, global::System.String password, global::System.Int32 minutes, global::System.Boolean status)
        {
            CustomerAccount customerAccount = new CustomerAccount();
            customerAccount.UserID = userID;
            customerAccount.Password = password;
            customerAccount.Minutes = minutes;
            customerAccount.Status = status;
            return customerAccount;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Minutes
        {
            get
            {
                return _Minutes;
            }
            set
            {
                OnMinutesChanging(value);
                ReportPropertyChanging("Minutes");
                _Minutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Minutes");
                OnMinutesChanged();
            }
        }
        private global::System.Int32 _Minutes;
        partial void OnMinutesChanging(global::System.Int32 value);
        partial void OnMinutesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Counternumber
        {
            get
            {
                return _Counternumber;
            }
            set
            {
                OnCounternumberChanging(value);
                ReportPropertyChanging("Counternumber");
                _Counternumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Counternumber");
                OnCounternumberChanged();
            }
        }
        private Nullable<global::System.Int16> _Counternumber;
        partial void OnCounternumberChanging(Nullable<global::System.Int16> value);
        partial void OnCounternumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Boolean _Status;
        partial void OnStatusChanging(global::System.Boolean value);
        partial void OnStatusChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cafeteria_Vernier_dbModel", "FK_Cv_Customer_Account_Cv_Customer_Information", "CustomerInformation")]
        public CustomerInformation CustomerInformation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerInformation>("Cafeteria_Vernier_dbModel.FK_Cv_Customer_Account_Cv_Customer_Information", "CustomerInformation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerInformation>("Cafeteria_Vernier_dbModel.FK_Cv_Customer_Account_Cv_Customer_Information", "CustomerInformation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomerInformation> CustomerInformationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerInformation>("Cafeteria_Vernier_dbModel.FK_Cv_Customer_Account_Cv_Customer_Information", "CustomerInformation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CustomerInformation>("Cafeteria_Vernier_dbModel.FK_Cv_Customer_Account_Cv_Customer_Information", "CustomerInformation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cafeteria_Vernier_dbModel", Name="CustomerInformation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerInformation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomerInformation object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="joinDate">Initial value of the JoinDate property.</param>
        public static CustomerInformation CreateCustomerInformation(global::System.String userID, global::System.String name, global::System.DateTime joinDate)
        {
            CustomerInformation customerInformation = new CustomerInformation();
            customerInformation.UserID = userID;
            customerInformation.Name = name;
            customerInformation.JoinDate = joinDate;
            return customerInformation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Logo
        {
            get
            {
                return StructuralObject.GetValidValue(_Logo);
            }
            set
            {
                OnLogoChanging(value);
                ReportPropertyChanging("Logo");
                _Logo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Logo");
                OnLogoChanged();
            }
        }
        private global::System.Byte[] _Logo;
        partial void OnLogoChanging(global::System.Byte[] value);
        partial void OnLogoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NationalID
        {
            get
            {
                return _NationalID;
            }
            set
            {
                OnNationalIDChanging(value);
                ReportPropertyChanging("NationalID");
                _NationalID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NationalID");
                OnNationalIDChanged();
            }
        }
        private global::System.String _NationalID;
        partial void OnNationalIDChanging(global::System.String value);
        partial void OnNationalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime JoinDate
        {
            get
            {
                return _JoinDate;
            }
            set
            {
                OnJoinDateChanging(value);
                ReportPropertyChanging("JoinDate");
                _JoinDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JoinDate");
                OnJoinDateChanged();
            }
        }
        private global::System.DateTime _JoinDate;
        partial void OnJoinDateChanging(global::System.DateTime value);
        partial void OnJoinDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cafeteria_Vernier_dbModel", "FK_Cv_Customer_Account_Cv_Customer_Information", "CustomerAccount")]
        public CustomerAccount CustomerAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerAccount>("Cafeteria_Vernier_dbModel.FK_Cv_Customer_Account_Cv_Customer_Information", "CustomerAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerAccount>("Cafeteria_Vernier_dbModel.FK_Cv_Customer_Account_Cv_Customer_Information", "CustomerAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomerAccount> CustomerAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerAccount>("Cafeteria_Vernier_dbModel.FK_Cv_Customer_Account_Cv_Customer_Information", "CustomerAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CustomerAccount>("Cafeteria_Vernier_dbModel.FK_Cv_Customer_Account_Cv_Customer_Information", "CustomerAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cafeteria_Vernier_dbModel", "FK_Cv_Team_Invitaction_Cv_Customer_Information", "TeamInvitaction")]
        public EntityCollection<TeamInvitaction> TeamInvitactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamInvitaction>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Invitaction_Cv_Customer_Information", "TeamInvitaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamInvitaction>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Invitaction_Cv_Customer_Information", "TeamInvitaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cafeteria_Vernier_dbModel", "FK_Cv_Team_Member_Cv_Customer_Information", "TeamMember")]
        public EntityCollection<TeamMember> TeamMembers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamMember>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Member_Cv_Customer_Information", "TeamMember");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamMember>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Member_Cv_Customer_Information", "TeamMember", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cafeteria_Vernier_dbModel", "FK_Cv_User_Account_Recharge_History_Cv_Customer_Information", "UserRechargeHistory")]
        public EntityCollection<UserRechargeHistory> UserRechargeHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRechargeHistory>("Cafeteria_Vernier_dbModel.FK_Cv_User_Account_Recharge_History_Cv_Customer_Information", "UserRechargeHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRechargeHistory>("Cafeteria_Vernier_dbModel.FK_Cv_User_Account_Recharge_History_Cv_Customer_Information", "UserRechargeHistory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cafeteria_Vernier_dbModel", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static Employee CreateEmployee(global::System.String employeeID, global::System.String password)
        {
            Employee employee = new Employee();
            employee.EmployeeID = employeeID;
            employee.Password = password;
            return employee;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                if (_EmployeeID != value)
                {
                    OnEmployeeIDChanging(value);
                    ReportPropertyChanging("EmployeeID");
                    _EmployeeID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EmployeeID");
                    OnEmployeeIDChanged();
                }
            }
        }
        private global::System.String _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.String value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private Nullable<global::System.Decimal> _Phone;
        partial void OnPhoneChanging(Nullable<global::System.Decimal> value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] UserImage
        {
            get
            {
                return StructuralObject.GetValidValue(_UserImage);
            }
            set
            {
                OnUserImageChanging(value);
                ReportPropertyChanging("UserImage");
                _UserImage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserImage");
                OnUserImageChanged();
            }
        }
        private global::System.Byte[] _UserImage;
        partial void OnUserImageChanging(global::System.Byte[] value);
        partial void OnUserImageChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cafeteria_Vernier_dbModel", "FK_Cv_Employ_Permission_Cv_Employ", "EmployeePermission")]
        public EntityCollection<EmployeePermission> EmployeePermissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeePermission>("Cafeteria_Vernier_dbModel.FK_Cv_Employ_Permission_Cv_Employ", "EmployeePermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeePermission>("Cafeteria_Vernier_dbModel.FK_Cv_Employ_Permission_Cv_Employ", "EmployeePermission", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cafeteria_Vernier_dbModel", Name="EmployeePermission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeePermission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeePermission object.
        /// </summary>
        /// <param name="autoInc">Initial value of the AutoInc property.</param>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="privilege">Initial value of the Privilege property.</param>
        public static EmployeePermission CreateEmployeePermission(global::System.Int64 autoInc, global::System.String employeeID, global::System.String privilege)
        {
            EmployeePermission employeePermission = new EmployeePermission();
            employeePermission.AutoInc = autoInc;
            employeePermission.EmployeeID = employeeID;
            employeePermission.Privilege = privilege;
            return employeePermission;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoInc
        {
            get
            {
                return _AutoInc;
            }
            set
            {
                if (_AutoInc != value)
                {
                    OnAutoIncChanging(value);
                    ReportPropertyChanging("AutoInc");
                    _AutoInc = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AutoInc");
                    OnAutoIncChanged();
                }
            }
        }
        private global::System.Int64 _AutoInc;
        partial void OnAutoIncChanging(global::System.Int64 value);
        partial void OnAutoIncChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private global::System.String _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.String value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Privilege
        {
            get
            {
                return _Privilege;
            }
            set
            {
                OnPrivilegeChanging(value);
                ReportPropertyChanging("Privilege");
                _Privilege = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Privilege");
                OnPrivilegeChanged();
            }
        }
        private global::System.String _Privilege;
        partial void OnPrivilegeChanging(global::System.String value);
        partial void OnPrivilegeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SettingPrivilage
        {
            get
            {
                return _SettingPrivilage;
            }
            set
            {
                OnSettingPrivilageChanging(value);
                ReportPropertyChanging("SettingPrivilage");
                _SettingPrivilage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SettingPrivilage");
                OnSettingPrivilageChanged();
            }
        }
        private global::System.String _SettingPrivilage;
        partial void OnSettingPrivilageChanging(global::System.String value);
        partial void OnSettingPrivilageChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cafeteria_Vernier_dbModel", "FK_Cv_Employ_Permission_Cv_Employ", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("Cafeteria_Vernier_dbModel.FK_Cv_Employ_Permission_Cv_Employ", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("Cafeteria_Vernier_dbModel.FK_Cv_Employ_Permission_Cv_Employ", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("Cafeteria_Vernier_dbModel.FK_Cv_Employ_Permission_Cv_Employ", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("Cafeteria_Vernier_dbModel.FK_Cv_Employ_Permission_Cv_Employ", "Employee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cafeteria_Vernier_dbModel", Name="Team")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Team : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Team object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="adminName">Initial value of the AdminName property.</param>
        /// <param name="joinDate">Initial value of the JoinDate property.</param>
        public static Team CreateTeam(global::System.String name, global::System.String adminName, global::System.DateTime joinDate)
        {
            Team team = new Team();
            team.Name = name;
            team.AdminName = adminName;
            team.JoinDate = joinDate;
            return team;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Logo
        {
            get
            {
                return StructuralObject.GetValidValue(_Logo);
            }
            set
            {
                OnLogoChanging(value);
                ReportPropertyChanging("Logo");
                _Logo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Logo");
                OnLogoChanged();
            }
        }
        private global::System.Byte[] _Logo;
        partial void OnLogoChanging(global::System.Byte[] value);
        partial void OnLogoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AdminName
        {
            get
            {
                return _AdminName;
            }
            set
            {
                OnAdminNameChanging(value);
                ReportPropertyChanging("AdminName");
                _AdminName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AdminName");
                OnAdminNameChanged();
            }
        }
        private global::System.String _AdminName;
        partial void OnAdminNameChanging(global::System.String value);
        partial void OnAdminNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime JoinDate
        {
            get
            {
                return _JoinDate;
            }
            set
            {
                OnJoinDateChanging(value);
                ReportPropertyChanging("JoinDate");
                _JoinDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JoinDate");
                OnJoinDateChanged();
            }
        }
        private global::System.DateTime _JoinDate;
        partial void OnJoinDateChanging(global::System.DateTime value);
        partial void OnJoinDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cafeteria_Vernier_dbModel", "FK_CV_Team_Account_Cv_Team", "TeamAccount")]
        public TeamAccount TeamAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamAccount>("Cafeteria_Vernier_dbModel.FK_CV_Team_Account_Cv_Team", "TeamAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamAccount>("Cafeteria_Vernier_dbModel.FK_CV_Team_Account_Cv_Team", "TeamAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TeamAccount> TeamAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamAccount>("Cafeteria_Vernier_dbModel.FK_CV_Team_Account_Cv_Team", "TeamAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TeamAccount>("Cafeteria_Vernier_dbModel.FK_CV_Team_Account_Cv_Team", "TeamAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cafeteria_Vernier_dbModel", "FK_Cv_Team_Account_Recharge_History_Cv_Team", "TeamRechargeHistory")]
        public EntityCollection<TeamRechargeHistory> TeamRechargeHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamRechargeHistory>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Account_Recharge_History_Cv_Team", "TeamRechargeHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamRechargeHistory>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Account_Recharge_History_Cv_Team", "TeamRechargeHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cafeteria_Vernier_dbModel", "FK_Cv_Team_Invitaction_Cv_Team", "TeamInvitaction")]
        public EntityCollection<TeamInvitaction> TeamInvitactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamInvitaction>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Invitaction_Cv_Team", "TeamInvitaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamInvitaction>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Invitaction_Cv_Team", "TeamInvitaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cafeteria_Vernier_dbModel", "FK_Cv_Team_Member_Cv_Team", "TeamMember")]
        public EntityCollection<TeamMember> TeamMembers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamMember>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Member_Cv_Team", "TeamMember");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamMember>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Member_Cv_Team", "TeamMember", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cafeteria_Vernier_dbModel", Name="TeamAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamAccount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeamAccount object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="minutes">Initial value of the Minutes property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="entryDate">Initial value of the EntryDate property.</param>
        public static TeamAccount CreateTeamAccount(global::System.String name, global::System.Int32 minutes, global::System.Boolean status, global::System.DateTime entryDate)
        {
            TeamAccount teamAccount = new TeamAccount();
            teamAccount.Name = name;
            teamAccount.Minutes = minutes;
            teamAccount.Status = status;
            teamAccount.EntryDate = entryDate;
            return teamAccount;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Minutes
        {
            get
            {
                return _Minutes;
            }
            set
            {
                OnMinutesChanging(value);
                ReportPropertyChanging("Minutes");
                _Minutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Minutes");
                OnMinutesChanged();
            }
        }
        private global::System.Int32 _Minutes;
        partial void OnMinutesChanging(global::System.Int32 value);
        partial void OnMinutesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Boolean _Status;
        partial void OnStatusChanging(global::System.Boolean value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EntryDate
        {
            get
            {
                return _EntryDate;
            }
            set
            {
                OnEntryDateChanging(value);
                ReportPropertyChanging("EntryDate");
                _EntryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryDate");
                OnEntryDateChanged();
            }
        }
        private global::System.DateTime _EntryDate;
        partial void OnEntryDateChanging(global::System.DateTime value);
        partial void OnEntryDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cafeteria_Vernier_dbModel", "FK_CV_Team_Account_Cv_Team", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Cafeteria_Vernier_dbModel.FK_CV_Team_Account_Cv_Team", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Cafeteria_Vernier_dbModel.FK_CV_Team_Account_Cv_Team", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Cafeteria_Vernier_dbModel.FK_CV_Team_Account_Cv_Team", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("Cafeteria_Vernier_dbModel.FK_CV_Team_Account_Cv_Team", "Team", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cafeteria_Vernier_dbModel", Name="TeamInvitaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamInvitaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeamInvitaction object.
        /// </summary>
        /// <param name="autoInc">Initial value of the AutoInc property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="isAdmin">Initial value of the IsAdmin property.</param>
        public static TeamInvitaction CreateTeamInvitaction(global::System.Int64 autoInc, global::System.String name, global::System.String userID, global::System.Boolean isAdmin)
        {
            TeamInvitaction teamInvitaction = new TeamInvitaction();
            teamInvitaction.AutoInc = autoInc;
            teamInvitaction.Name = name;
            teamInvitaction.UserID = userID;
            teamInvitaction.IsAdmin = isAdmin;
            return teamInvitaction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoInc
        {
            get
            {
                return _AutoInc;
            }
            set
            {
                if (_AutoInc != value)
                {
                    OnAutoIncChanging(value);
                    ReportPropertyChanging("AutoInc");
                    _AutoInc = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AutoInc");
                    OnAutoIncChanged();
                }
            }
        }
        private global::System.Int64 _AutoInc;
        partial void OnAutoIncChanging(global::System.Int64 value);
        partial void OnAutoIncChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAdmin
        {
            get
            {
                return _IsAdmin;
            }
            set
            {
                OnIsAdminChanging(value);
                ReportPropertyChanging("IsAdmin");
                _IsAdmin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAdmin");
                OnIsAdminChanged();
            }
        }
        private global::System.Boolean _IsAdmin;
        partial void OnIsAdminChanging(global::System.Boolean value);
        partial void OnIsAdminChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cafeteria_Vernier_dbModel", "FK_Cv_Team_Invitaction_Cv_Customer_Information", "CustomerInformation")]
        public CustomerInformation CustomerInformation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerInformation>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Invitaction_Cv_Customer_Information", "CustomerInformation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerInformation>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Invitaction_Cv_Customer_Information", "CustomerInformation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomerInformation> CustomerInformationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerInformation>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Invitaction_Cv_Customer_Information", "CustomerInformation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CustomerInformation>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Invitaction_Cv_Customer_Information", "CustomerInformation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cafeteria_Vernier_dbModel", "FK_Cv_Team_Invitaction_Cv_Team", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Invitaction_Cv_Team", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Invitaction_Cv_Team", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Invitaction_Cv_Team", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Invitaction_Cv_Team", "Team", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cafeteria_Vernier_dbModel", Name="TeamMember")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamMember : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeamMember object.
        /// </summary>
        /// <param name="autoInc">Initial value of the AutoInc property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static TeamMember CreateTeamMember(global::System.Int64 autoInc, global::System.String name, global::System.String userID)
        {
            TeamMember teamMember = new TeamMember();
            teamMember.AutoInc = autoInc;
            teamMember.Name = name;
            teamMember.UserID = userID;
            return teamMember;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoInc
        {
            get
            {
                return _AutoInc;
            }
            set
            {
                if (_AutoInc != value)
                {
                    OnAutoIncChanging(value);
                    ReportPropertyChanging("AutoInc");
                    _AutoInc = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AutoInc");
                    OnAutoIncChanged();
                }
            }
        }
        private global::System.Int64 _AutoInc;
        partial void OnAutoIncChanging(global::System.Int64 value);
        partial void OnAutoIncChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cafeteria_Vernier_dbModel", "FK_Cv_Team_Member_Cv_Customer_Information", "CustomerInformation")]
        public CustomerInformation CustomerInformation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerInformation>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Member_Cv_Customer_Information", "CustomerInformation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerInformation>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Member_Cv_Customer_Information", "CustomerInformation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomerInformation> CustomerInformationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerInformation>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Member_Cv_Customer_Information", "CustomerInformation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CustomerInformation>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Member_Cv_Customer_Information", "CustomerInformation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cafeteria_Vernier_dbModel", "FK_Cv_Team_Member_Cv_Team", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Member_Cv_Team", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Member_Cv_Team", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Member_Cv_Team", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Member_Cv_Team", "Team", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cafeteria_Vernier_dbModel", Name="TeamRechargeHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamRechargeHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeamRechargeHistory object.
        /// </summary>
        /// <param name="autoInc">Initial value of the AutoInc property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="dateWithTime">Initial value of the DateWithTime property.</param>
        /// <param name="minutes">Initial value of the Minutes property.</param>
        /// <param name="bill">Initial value of the bill property.</param>
        public static TeamRechargeHistory CreateTeamRechargeHistory(global::System.Int64 autoInc, global::System.String name, global::System.String employeeID, global::System.DateTime dateWithTime, global::System.Int32 minutes, global::System.Decimal bill)
        {
            TeamRechargeHistory teamRechargeHistory = new TeamRechargeHistory();
            teamRechargeHistory.AutoInc = autoInc;
            teamRechargeHistory.Name = name;
            teamRechargeHistory.EmployeeID = employeeID;
            teamRechargeHistory.DateWithTime = dateWithTime;
            teamRechargeHistory.Minutes = minutes;
            teamRechargeHistory.bill = bill;
            return teamRechargeHistory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoInc
        {
            get
            {
                return _AutoInc;
            }
            set
            {
                if (_AutoInc != value)
                {
                    OnAutoIncChanging(value);
                    ReportPropertyChanging("AutoInc");
                    _AutoInc = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AutoInc");
                    OnAutoIncChanged();
                }
            }
        }
        private global::System.Int64 _AutoInc;
        partial void OnAutoIncChanging(global::System.Int64 value);
        partial void OnAutoIncChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private global::System.String _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.String value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateWithTime
        {
            get
            {
                return _DateWithTime;
            }
            set
            {
                OnDateWithTimeChanging(value);
                ReportPropertyChanging("DateWithTime");
                _DateWithTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateWithTime");
                OnDateWithTimeChanged();
            }
        }
        private global::System.DateTime _DateWithTime;
        partial void OnDateWithTimeChanging(global::System.DateTime value);
        partial void OnDateWithTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Minutes
        {
            get
            {
                return _Minutes;
            }
            set
            {
                OnMinutesChanging(value);
                ReportPropertyChanging("Minutes");
                _Minutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Minutes");
                OnMinutesChanged();
            }
        }
        private global::System.Int32 _Minutes;
        partial void OnMinutesChanging(global::System.Int32 value);
        partial void OnMinutesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal bill
        {
            get
            {
                return _bill;
            }
            set
            {
                OnbillChanging(value);
                ReportPropertyChanging("bill");
                _bill = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("bill");
                OnbillChanged();
            }
        }
        private global::System.Decimal _bill;
        partial void OnbillChanging(global::System.Decimal value);
        partial void OnbillChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cafeteria_Vernier_dbModel", "FK_Cv_Team_Account_Recharge_History_Cv_Team", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Account_Recharge_History_Cv_Team", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Account_Recharge_History_Cv_Team", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Account_Recharge_History_Cv_Team", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("Cafeteria_Vernier_dbModel.FK_Cv_Team_Account_Recharge_History_Cv_Team", "Team", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cafeteria_Vernier_dbModel", Name="UserLoginHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserLoginHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserLoginHistory object.
        /// </summary>
        /// <param name="autoInc">Initial value of the AutoInc property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="stratTime">Initial value of the StratTime property.</param>
        /// <param name="counterNumber">Initial value of the CounterNumber property.</param>
        public static UserLoginHistory CreateUserLoginHistory(global::System.Int64 autoInc, global::System.String userID, global::System.DateTime stratTime, global::System.Int16 counterNumber)
        {
            UserLoginHistory userLoginHistory = new UserLoginHistory();
            userLoginHistory.AutoInc = autoInc;
            userLoginHistory.UserID = userID;
            userLoginHistory.StratTime = stratTime;
            userLoginHistory.CounterNumber = counterNumber;
            return userLoginHistory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoInc
        {
            get
            {
                return _AutoInc;
            }
            set
            {
                if (_AutoInc != value)
                {
                    OnAutoIncChanging(value);
                    ReportPropertyChanging("AutoInc");
                    _AutoInc = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AutoInc");
                    OnAutoIncChanged();
                }
            }
        }
        private global::System.Int64 _AutoInc;
        partial void OnAutoIncChanging(global::System.Int64 value);
        partial void OnAutoIncChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StratTime
        {
            get
            {
                return _StratTime;
            }
            set
            {
                OnStratTimeChanging(value);
                ReportPropertyChanging("StratTime");
                _StratTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StratTime");
                OnStratTimeChanged();
            }
        }
        private global::System.DateTime _StratTime;
        partial void OnStratTimeChanging(global::System.DateTime value);
        partial void OnStratTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 CounterNumber
        {
            get
            {
                return _CounterNumber;
            }
            set
            {
                OnCounterNumberChanging(value);
                ReportPropertyChanging("CounterNumber");
                _CounterNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CounterNumber");
                OnCounterNumberChanged();
            }
        }
        private global::System.Int16 _CounterNumber;
        partial void OnCounterNumberChanging(global::System.Int16 value);
        partial void OnCounterNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TeamName
        {
            get
            {
                return _TeamName;
            }
            set
            {
                OnTeamNameChanging(value);
                ReportPropertyChanging("TeamName");
                _TeamName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TeamName");
                OnTeamNameChanged();
            }
        }
        private global::System.String _TeamName;
        partial void OnTeamNameChanging(global::System.String value);
        partial void OnTeamNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cafeteria_Vernier_dbModel", Name="UserRechargeHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRechargeHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserRechargeHistory object.
        /// </summary>
        /// <param name="autoInc">Initial value of the AutoInc property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="dateWithTime">Initial value of the DateWithTime property.</param>
        /// <param name="minutes">Initial value of the Minutes property.</param>
        /// <param name="bill">Initial value of the bill property.</param>
        public static UserRechargeHistory CreateUserRechargeHistory(global::System.Int64 autoInc, global::System.String userID, global::System.String employeeID, global::System.DateTime dateWithTime, global::System.Int32 minutes, global::System.Decimal bill)
        {
            UserRechargeHistory userRechargeHistory = new UserRechargeHistory();
            userRechargeHistory.AutoInc = autoInc;
            userRechargeHistory.UserID = userID;
            userRechargeHistory.EmployeeID = employeeID;
            userRechargeHistory.DateWithTime = dateWithTime;
            userRechargeHistory.Minutes = minutes;
            userRechargeHistory.bill = bill;
            return userRechargeHistory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AutoInc
        {
            get
            {
                return _AutoInc;
            }
            set
            {
                if (_AutoInc != value)
                {
                    OnAutoIncChanging(value);
                    ReportPropertyChanging("AutoInc");
                    _AutoInc = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AutoInc");
                    OnAutoIncChanged();
                }
            }
        }
        private global::System.Int64 _AutoInc;
        partial void OnAutoIncChanging(global::System.Int64 value);
        partial void OnAutoIncChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private global::System.String _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.String value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateWithTime
        {
            get
            {
                return _DateWithTime;
            }
            set
            {
                OnDateWithTimeChanging(value);
                ReportPropertyChanging("DateWithTime");
                _DateWithTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateWithTime");
                OnDateWithTimeChanged();
            }
        }
        private global::System.DateTime _DateWithTime;
        partial void OnDateWithTimeChanging(global::System.DateTime value);
        partial void OnDateWithTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Minutes
        {
            get
            {
                return _Minutes;
            }
            set
            {
                OnMinutesChanging(value);
                ReportPropertyChanging("Minutes");
                _Minutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Minutes");
                OnMinutesChanged();
            }
        }
        private global::System.Int32 _Minutes;
        partial void OnMinutesChanging(global::System.Int32 value);
        partial void OnMinutesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal bill
        {
            get
            {
                return _bill;
            }
            set
            {
                OnbillChanging(value);
                ReportPropertyChanging("bill");
                _bill = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("bill");
                OnbillChanged();
            }
        }
        private global::System.Decimal _bill;
        partial void OnbillChanging(global::System.Decimal value);
        partial void OnbillChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cafeteria_Vernier_dbModel", "FK_Cv_User_Account_Recharge_History_Cv_Customer_Information", "CustomerInformation")]
        public CustomerInformation CustomerInformation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerInformation>("Cafeteria_Vernier_dbModel.FK_Cv_User_Account_Recharge_History_Cv_Customer_Information", "CustomerInformation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerInformation>("Cafeteria_Vernier_dbModel.FK_Cv_User_Account_Recharge_History_Cv_Customer_Information", "CustomerInformation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomerInformation> CustomerInformationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerInformation>("Cafeteria_Vernier_dbModel.FK_Cv_User_Account_Recharge_History_Cv_Customer_Information", "CustomerInformation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CustomerInformation>("Cafeteria_Vernier_dbModel.FK_Cv_User_Account_Recharge_History_Cv_Customer_Information", "CustomerInformation", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
