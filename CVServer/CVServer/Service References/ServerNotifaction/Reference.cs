//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Procesta.CvServer.ServerNotifaction {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CounterInformation", Namespace="http://schemas.datacontract.org/2004/07/ServerNotification")]
    [System.SerializableAttribute()]
    public partial class CounterInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CounterNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CounterNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Procesta.CvServer.ServerNotifaction.CounterStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime sendingTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CounterName {
            get {
                return this.CounterNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CounterNameField, value) != true)) {
                    this.CounterNameField = value;
                    this.RaisePropertyChanged("CounterName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CounterNumber {
            get {
                return this.CounterNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CounterNumberField, value) != true)) {
                    this.CounterNumberField = value;
                    this.RaisePropertyChanged("CounterNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerIDField, value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Procesta.CvServer.ServerNotifaction.CounterStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime sendingTime {
            get {
                return this.sendingTimeField;
            }
            set {
                if ((this.sendingTimeField.Equals(value) != true)) {
                    this.sendingTimeField = value;
                    this.RaisePropertyChanged("sendingTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CounterStatus", Namespace="http://schemas.datacontract.org/2004/07/ServerNotification")]
    public enum CounterStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Free = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Busy = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServerNotifaction.IServerNotification")]
    public interface IServerNotification {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerNotification/SetCounterInformation")]
        void SetCounterInformation(Procesta.CvServer.ServerNotifaction.CounterInformation counterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerNotification/GetCounterInformation", ReplyAction="http://tempuri.org/IServerNotification/GetCounterInformationResponse")]
        System.Collections.Generic.List<Procesta.CvServer.ServerNotifaction.CounterInformation> GetCounterInformation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerNotification/RemoveCounterInformation", ReplyAction="http://tempuri.org/IServerNotification/RemoveCounterInformationResponse")]
        void RemoveCounterInformation(Procesta.CvServer.ServerNotifaction.CounterInformation counterInfo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServerNotificationChannel : Procesta.CvServer.ServerNotifaction.IServerNotification, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServerNotificationClient : System.ServiceModel.ClientBase<Procesta.CvServer.ServerNotifaction.IServerNotification>, Procesta.CvServer.ServerNotifaction.IServerNotification {
        
        public ServerNotificationClient() {
        }
        
        public ServerNotificationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServerNotificationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServerNotificationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServerNotificationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SetCounterInformation(Procesta.CvServer.ServerNotifaction.CounterInformation counterInfo) {
            base.Channel.SetCounterInformation(counterInfo);
        }
        
        public System.Collections.Generic.List<Procesta.CvServer.ServerNotifaction.CounterInformation> GetCounterInformation() {
            return base.Channel.GetCounterInformation();
        }
        
        public void RemoveCounterInformation(Procesta.CvServer.ServerNotifaction.CounterInformation counterInfo) {
            base.Channel.RemoveCounterInformation(counterInfo);
        }
    }
}
